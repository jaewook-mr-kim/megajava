package OOP;

public class OOP {
// OOP (Object Oriented Programming) - 책 p.186
// 객체 지향 프로그래밍
// 객체 = 부품의 특징
// 1) 성질(속성) : 멤버변수
// 2) 동작 : 멤버메소드 (함수와 동일한 개념)
// 
// 예
// - 붕어빵 (대상, object)
// - 붕어빵 틀 (붕어빵의 모양, 소의 재료 등등) -> 클래스
// - 클래스를 가지고 복사한 것 (찍어낸 대상)이 object
// - 우리가 원한 실제 대상은 object 
// - object는 class의 실제값 (instance 인스턴스)
// - class의 인스턴스는 object
//
	
	
	
// public void call(int x) { }
// -public : 접근제어자
// -void : 없다. return 값이 없다. (반환값이 없다.)
// <-> 반환값이 있다. 반환되는 데이터 타입 키워드
// int, String, double, int[], Water, Mask, Tv
// 
// call : 메소드의 이름, 소문자
// () : 입력값, 없을 수도 있고 여러개일 수도 있다.

// cal.call(100)
// cal.call(100, 200)
// 호출되는 시점에서는 입력값이 중요!
// 따라서, 입력값만 다르게 하면, 자바에서는 여러가지의 메소드가 하나의 이름을 공유할 수 있다.
// 하나의 메소드 이름으로 입력값만 다르게 하면 비슷한 여러가지의 기능들을 구현할 수 있다.
// "다형성" (오버로딩)
}
